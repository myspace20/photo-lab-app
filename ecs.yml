AWSTemplateFormatVersion: '2010-09-09'
Description: ECR repo and ECS Fargate service (no public IP; uses VPC endpoints for required AWS services)

Parameters:
  ClusterName:
    Type: String
    Default: java-web-cluster
  ServiceName:
    Type: String
    Default: java-web-service
  ContainerPort:
    Type: Number
    Default: 8080
  ContainerCpu:
    Type: Number
    Default: 256
  ContainerMemory:
    Type: Number
    Default: 512
  DesiredCount:
    Type: Number
    Default: 0

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: java-web-app
      ImageScanningConfiguration:
        scanOnPush: true

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      CapacityProviders:
        - FARGATE

  ServiceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue networking-stack-VpcId
      Protocol: HTTP
      Port: !Ref ContainerPort
      TargetType: ip
      HealthCheckPath: /
      HealthCheckProtocol: HTTP

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      Subnets: !Split [ ',', !ImportValue networking-stack-PublicSubnetIds ]
      SecurityGroups:
        - !ImportValue networking-stack-PublicLoadBalancerSGId

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 404
            ContentType: text/plain
            MessageBody: "Not Found"

  ServiceListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref PublicLoadBalancerListener
      Priority: 10
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/java/*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ServiceTargetGroup

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ServiceName}
      RetentionInDays: 7

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ServiceName
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue iam-stack-ECSTaskExecutionRoleArn
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Image: !Sub "${ECRRepository.RepositoryUri}:latest"
          Cpu: !Ref ContainerCpu
          Memory: !Ref ContainerMemory
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref ServiceName
          Environment:
            - Name: IMAGE_BUCKET
              Value: !ImportValue secrets-s3-stack-ImageBucketName
          Secrets:
            - Name: DB_CREDENTIALS
              ValueFrom: !ImportValue secrets-s3-stack-SecretArn

  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - ServiceListenerRule
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Ref ServiceName
      LaunchType: FARGATE
      DeploymentController:
        Type: CODE_DEPLOY
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !ImportValue networking-stack-ServiceSecurityGroupId
          Subnets: !Split [ ',', !ImportValue networking-stack-PrivateSubnetIds ]
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ServiceName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ServiceTargetGroup

Outputs:
  RepositoryUri:
    Value: !GetAtt ECRRepository.RepositoryUri
    Export:
      Name: !Sub ${AWS::StackName}-RepositoryUri

  ClusterArn:
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${AWS::StackName}-ClusterArn

  ServiceName:
    Value: !Ref ServiceName
    Export:
      Name: !Sub ${AWS::StackName}-ServiceName

  TargetGroupArn:
    Value: !Ref ServiceTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-TargetGroupArn

  ListenerArn:
    Value: !Ref PublicLoadBalancerListener
    Export:
      Name: !Sub ${AWS::StackName}-ListenerArn
      
  ServiceTargetGroupName:
    Value: !GetAtt ServiceTargetGroup.TargetGroupName
    Export:
      Name: !Sub ${AWS::StackName}-ServiceTargetGroupName
